(def multi-macro
     (macro (fun args
                 (moremacro
                  (fun body
                       (let ((head (car args)))
                         (let ((tail (cdr args)))
                           (let ((tailfun (cons (cons 'fun tail) body)))
                             (if (nil? head)
                                 (cons 'macro tailfun)
                               (cons (cons 'multi-macro head)
                                     (cons 'moremacro tailfun))))))))))) 

(def defmacro (multi-macro (name args body)
                           (cons (cons 'def name)
                                 (cons (cons 'multi-macro args) body))))    ;<macro <Fonction>> : Tprim "Macro"

(defmacro and (e1 e2)
  (cons (cons ': (cons (cons (cons 'if e1) e2) 'false)) 'Bool))
